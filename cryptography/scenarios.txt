Author: Alex Falk

1. Alice and Bob use Diffie-Hellman to agree on a shared secret key K. Because AITM is impossible, this method is secure. That is to say, no AITM means that Eve can't decipher the message which achieves the stated goal. I'll also note that I'm assuming that Alice does not encrypt the message letter by letter which would be insecure.

2. This question seems to imply that the message need not be encrpyted as the only issue at hand is that of corruption of the data. Given this, (and if this implication was not meant, then lets say they encrypt using Diffie-Hellman and agree upon a shared key K) Alice sends Bob the message with H(M) appended to the end. Bob then separates H(M) from M and computes H(M) himself using the crpytographic hash function SHA-256. If Bob's H(M) and Alice's H(M) match then Bob knows that the data sent and received is the same. I'm assuming that Mal did not recompute and reappend H(M) on its way over to Bob.

3. Because AITM is impossible and its a long message, Alice and Bob use Diffie-Hellman to agree on a shared key K. This almost guarentees that Eve can't read the message. Included in this encrypted message is E(S_A, H(M)). When Bob gets the message, he decrypts with K and then performs E(P_A , E(S_A, H(M)). Only someone with Alice's private key (Alice given our assumptions) could have encrypted the message in such a way that it can be decrypted using Alice's public key. This confirms that the sender is Alice.

4. 	a) There is a solar flare (I confirmed this method with Jeff). This solar flare flipped some critical bits which changed the contract. As the judge, I would not find this claim remotely plausible. Even if this were to happen, the contract would likely not be altered in a linguistically significant way. That is, the flipped bits would result in jibberish. Additionally, it would be clear that the contracats had changed because the digests wouldn't match.

	b) Let's say that there exists a Mal between Alice and Bob. Alice and Bob used DH to agree on a secret key K. Alice could claim that after Bob sent off C, Mal intercepted the message and changed the contents of C. Mal then sent the contract to Alice. In this case, Alice and Bob would have different contracts. As the judge, I would not deem this very likely. This siuation would require that the digests of C (H(C)) match after the changes to C were made (the digest is found in the signature). This is not likely because hash functions are designed to be collision resistant. The chances that two nearly identical documents that differ slightly have the same hash is low.

	c) Let's say that there exists a Mal between Alice and Bob. Alice and Bob used DH to agree on a secret key K. Alice could claim that this Mal got access to her private key, forged her signature, computed Sig_A using S_A, and sent the contract back to Bob. This scenario would require that Mal also edit C and send it to Alice who then sends it back to Mal and Mal doesn't send it to Bob. As this judge, this scenario is not entirely implausible. Maybe there are aspects of the case in which this arrangement is beneficial to Mal. Its possible that Alice's private key got leaked, but it is unlikely. 

5. Sig_CA = E(S_CA, H("bob.com" || P_B))

6. Let's assume that Alice and Bob use Diffie-Hellman to agree on a shared key K. They use this key to encrypt and derypt their messages to each other. To assure Alice that Bob is Bob, Alice sends Bob a random number R and asks him to send back E(S_B, R || g^b mod p). This should be enough to assure Alice that she's talking to Bob. Let's consider 2 scenarios. In the first scenario, there is no AITM. In the second scenario, there is Mal, an AITM.

First Scenario: Alice sends R to Bob. Bob sends back E(S_B, R || g^b mod p). Since Bob initially sent Alice g^b mod p while setting up K, Alice can decrypt the message using Bob's public key and compare the info. If what Bob sends matches what Alice has stored (g^b mod p) then all is ok.

Second Scenario: Mal is in the middle and agrees on 2 different keys with Alice and Bob. These keys will likely not be the same because Alice's a and Bob's b are hidden to Mal. This means that in the set up of DH, Alice does not receive g^b mod p from Bob but instead g^m mod p from Mal. So, when Alice requests the challenge, she expects to get back R || g^m mod p. Mal has no choice but to pass this challenge off to Bob. Bob sends back E(S_B, R || g^b mod p). Mal cannot decrpyt the message from Bob, change g^b mod p to g^m mod p, and then reencrypt because reencryption would require that Mal has Bob's secret key (which is impossible under the current assumptions). Therefore, Mal is forced to send the message back to Alice. Alice expects to find g^m mod p but instead finds g^b mod p so she knows that she is not talking to Bob (ultimately because Mal doesn't have S_B, only Bob has that).

If Mal were to let Alice have g^b mod p when setting up DH, Mal would be putting herself in the position of Eve and wouldn't be able to perform any meaningful malicious activity because she does not know Alice's a or Bob's b. In this scenario, then, Alice is still talking to Bob and needs not worry. Everything will go as the first scenario went.

7. 	a) If Bob's private key were leaked, Mal would be able to pass any challenges that Alice sent to Bob. The certificate could be requested by Mal and sent to Alice. Alice then challenges Mal with the information she obtained from the certificate which Mal can answer successfully.

	b) Mal could self-sign a certificate containing Bob's information and then send it to Alice. Mal is masking as Bob so she has all the information she needs to pass any challenges.